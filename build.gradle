plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.1'
    id 'io.spring.dependency-management' version '1.1.5'
}

group = 'com.cozymate'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}


dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'com.mysql:mysql-connector-j'
    implementation 'com.github.mwiede:jsch:0.2.16'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    //swagger 설정
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.2.0'

    //jwt
    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    implementation 'io.jsonwebtoken:jjwt-impl:0.11.5'
    implementation 'io.jsonwebtoken:jjwt-jackson:0.11.5'

    // oauth2
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
    implementation 'org.springframework.security:spring-security-oauth2-jose'


    //DB의 JSON 타입을 Domain에서 사용하기 위함
    implementation 'io.hypersistence:hypersistence-utils-hibernate-62:3.7.0'

    //spring security
    implementation 'org.springframework.boot:spring-boot-starter-security'

    //aws - S3
    implementation 'org.springframework.cloud:spring-cloud-starter-aws:2.2.6.RELEASE'
    // TODO: 07.25. [무빗] 위 패키지는 18년이 마지막 업데이트된 레거시, 추후 아래 패키지로 변경 예정
    // implementation 'io.awspring.cloud:spring-cloud-aws-starter-s3Z:3.1.1'

    //queryDsl
    implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
    annotationProcessor "com.querydsl:querydsl-apt:5.0.0:jakarta"
    annotationProcessor "jakarta.annotation:jakarta.annotation-api"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api"

    // Firebase Admin SDK
    implementation 'com.google.firebase:firebase-admin:9.4.3'

    // spring-boot mail
    implementation 'org.springframework.boot:spring-boot-starter-mail'

    // redis
    implementation 'org.springframework.boot:spring-boot-starter-data-redis:3.3.4'

    // email valid
    implementation 'commons-validator:commons-validator:1.7'

    // sentry
    // 아래 두 라이브러리는 버전을 통일해서 사용하길 권장
    implementation 'io.sentry:sentry-spring-boot-starter-jakarta:7.20.0'
    implementation 'io.sentry:sentry-jdbc:7.20.0'

    // webflux
    implementation 'org.springframework.boot:spring-boot-starter-webflux'

    // actuator (health check)
    implementation 'org.springframework.boot:spring-boot-starter-actuator'

}

tasks.named('test') {
    useJUnitPlatform()
}

processResources.dependsOn('copyGitSubmodule')
tasks.register('copyGitSubmodule', Copy) {
    from './config'
    include '*.yml'
    include 'firebase-service-account.json'
    include 'db/*'
    into 'src/main/resources'
}